/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as VenuesRouteImport } from './routes/venues'
import { Route as TablesRouteImport } from './routes/tables'
import { Route as MenuRouteImport } from './routes/menu'
import { Route as KdsRouteImport } from './routes/kds'
import { Route as AdminRouteImport } from './routes/admin'
import { Route as IndexRouteImport } from './routes/index'

const VenuesRoute = VenuesRouteImport.update({
  id: '/venues',
  path: '/venues',
  getParentRoute: () => rootRouteImport,
} as any)
const TablesRoute = TablesRouteImport.update({
  id: '/tables',
  path: '/tables',
  getParentRoute: () => rootRouteImport,
} as any)
const MenuRoute = MenuRouteImport.update({
  id: '/menu',
  path: '/menu',
  getParentRoute: () => rootRouteImport,
} as any)
const KdsRoute = KdsRouteImport.update({
  id: '/kds',
  path: '/kds',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/kds': typeof KdsRoute
  '/menu': typeof MenuRoute
  '/tables': typeof TablesRoute
  '/venues': typeof VenuesRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/kds': typeof KdsRoute
  '/menu': typeof MenuRoute
  '/tables': typeof TablesRoute
  '/venues': typeof VenuesRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/kds': typeof KdsRoute
  '/menu': typeof MenuRoute
  '/tables': typeof TablesRoute
  '/venues': typeof VenuesRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/admin' | '/kds' | '/menu' | '/tables' | '/venues'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/admin' | '/kds' | '/menu' | '/tables' | '/venues'
  id: '__root__' | '/' | '/admin' | '/kds' | '/menu' | '/tables' | '/venues'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRoute
  KdsRoute: typeof KdsRoute
  MenuRoute: typeof MenuRoute
  TablesRoute: typeof TablesRoute
  VenuesRoute: typeof VenuesRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/venues': {
      id: '/venues'
      path: '/venues'
      fullPath: '/venues'
      preLoaderRoute: typeof VenuesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tables': {
      id: '/tables'
      path: '/tables'
      fullPath: '/tables'
      preLoaderRoute: typeof TablesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/menu': {
      id: '/menu'
      path: '/menu'
      fullPath: '/menu'
      preLoaderRoute: typeof MenuRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/kds': {
      id: '/kds'
      path: '/kds'
      fullPath: '/kds'
      preLoaderRoute: typeof KdsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRoute,
  KdsRoute: KdsRoute,
  MenuRoute: MenuRoute,
  TablesRoute: TablesRoute,
  VenuesRoute: VenuesRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
